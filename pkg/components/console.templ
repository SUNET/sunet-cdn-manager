package components

templ ConsolePage(heading string, orgs []string, contents templ.Component) {
	@Logout()
	@OrganizationSelector(orgs)
	@NavBar()
	<h1>{ heading }</h1>
	<div id="contents">
		@contents
	</div>
}

templ Home(username string) {
	<div>Hello { username }!</div>
}

templ Logout() {
	<div class="logout">
		<div><a href="/auth/logout">Logout</a></div>
	</div>
}

templ OrganizationSelector(orgs []string) {
	<form action="/console">
		@CSRF()
		<label for="orgs">Organization:</label>
		<select name="orgs" id="orgs" disabled?={ len(orgs) < 2 }>
			if len(orgs) == 0 {
				<option value="undefined">undefined</option>
			} else {
				for _, org := range orgs {
					<option value={ org }>{ org }</option>
				}
			}
		</select>
		<input type="submit"/>
	</form>
}

templ NavBar() {
	<div>
		<nav>
			<ul>
				<li><a href="/console">Home</a></li>
				<li><a href="/console/services">Services</a></li>
			</ul>
		</nav>
	</div>
}

templ ServicesContent(services []Service) {
	if len(services) == 0 {
		<div>No services created</div>
	} else {
		<div>Services:</div>
		<ul>
			for _, service := range services {
				<li>{ service.Name }</li>
			}
		</ul>
	}
	<a href="/console/create-service">Create service</a>
}

templ CreateServiceContent() {
	<form method="post" action="/console/create-service">
		@CSRF()
		<label for="name">Name:</label>
		<input type="text" id="name" name="name"/>
		<input type="submit"/>
	</form>
}

templ LoginPage(returnTo string, loginFailed bool) {
	<h1>Login</h1>
	<h2>Local</h2>
	<form method="post" action="/auth/login">
		@CSRF()
		if returnTo != "" {
			<input type="hidden" name="return_to" value={ returnTo }/>
		}
		<label for="username">Username:</label>
		<br/>
		<input type="text" id="username" name="username"/>
		<br/>
		<label for="password">Password:</label>
		<br/>
		<input type="password" id="password" name="password"/>
		<input type="submit" value="Login"/>
	</form>
	if loginFailed {
		<div>Login failed!</div>
	}
	<h2>OpenID Connect</h2>
	<div><a href="/auth/oidc/keycloak">Login with Keycloak</a></div>
}

// https://templ.guide/integrations/web-frameworks/#githubcomgorillacsrf
templ CSRF() {
	<input type="hidden" name="gorilla.csrf.Token" value={ ctx.Value("gorilla.csrf.Token").(string) }/>
}
